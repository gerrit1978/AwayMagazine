<?php


/**
 * Implements hook_menu_alter().
 */
function hc_user_menu_alter(&$items) {
  $items['user/%user']['title callback'] = '_hc_user_page_title';
  $items['user/%user/connections']['access_callback'] = '_hc_user_access_callback';
  $items['user/%user/view']['title'] = 'User account';
  $items['user/%user/view']['title callback'] = '_hc_user_tab_title';
  $items['user/%user/view']['title arguments'] = array(1);
  $items['user/%user/edit']['title'] = 'Update email/password';
  $items['user']['type'] = MENU_CALLBACK;
  $items['user/register']['type'] = MENU_CALLBACK;
  $items['user/password']['type'] = MENU_CALLBACK;
}

/**
 * Helper function for user page title.
 */
function _hc_user_page_title($account = NULL) {
  if (!is_object($account)) {
    $account = $GLOBALS['user'];
  }

  $title = t('Hello');
  if (module_exists('commerce_addressbook')) {
    $billing_profile_id = commerce_addressbook_get_default_profile_id($account->uid, 'billing');
    if ($billing_profile_id) {
      $billing_profile = commerce_customer_profile_load($billing_profile_id);
      $title .= ', ' . check_plain($billing_profile->commerce_customer_address[LANGUAGE_NONE][0]['name_line']);
    }
  }
  return $title;
}

/**
 * Helper function for user menu tab title.
 */
function _hc_user_tab_title($account) {
  return (is_object($account) && $GLOBALS['user']->uid == $account->uid) ? t('My account') : t('Account overview');
}

/**
 * Grant access only to administrators.
 */
function _hc_user_access_callback($account) {
  return user_access('administer site configuration', $account);
}


/**
 * Implements hook_menu_default_menu_links()
 */
function hc_user_menu_default_menu_links() {
  exit('functie aangeroepen');
}

/**
 * Implements hook_form_alter
 */
function hc_user_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'user_login') {
    $form['name']['#prefix']  = '<div id="' . $form_id . '_form">';
    $form['name']['#prefix'] .= '<h1>' . t('Login') . '</h1>';
    $form['pass']['#suffix'] = l(t('Forgot your password?'), 'user/password', array('attributes' => array('class' => 'login-password', 'title' => t('Get a new password'))));
    $form['actions']['#suffix']  = '</div>';
    $form['actions']['#suffix'] .= '<div class="create-account clearfix">';
    $form['actions']['#suffix'] .= "\r<h2>" . t('I don\'t have an account') . "</h2>";
    $form['actions']['#suffix'] .= "\r" . l(t('Create an account'), 'user/register', array('attributes' => array('class' => 'login-register', 'title' => t('Create a new account'))));
    $form['actions']['#suffix'] .= '</div>';
  }
  if ($form_id == 'user_pass') {
    $form['name']['#prefix'] = '<div id="' . $form_id . '_form">';
    $form['name']['#prefix'] .= '<h1>' . t('Request a new password') . '</h1>';
    $form['actions']['#suffix'] = '<div class="back-to-login clearfix">' . l(t('Back to login'), 'user/login', array('attributes' => array('class' => 'login-account', 'title' => t('Sign in')))) . '</div>';
    $form['actions']['#suffix'] .= '</div>';
  }
  if ($form_id == 'user_register_form') {
    $form['account']['name']['#prefix'] = '<div id="' . $form_id . '">';
    $form['account']['name']['#prefix'] .= '<h1>' . t('Register') . '</h1>';
    $form['actions']['submit']['#suffix'] = '</div>';
    $form['actions']['submit']['#suffix'] .= '<div class="back-to-login">' . l(t('Back to login'), 'user/login', array('attributes' => array('class' => 'login-account', 'title' => t('Sign in')))) . '</div>';
  }
  
	if ($form_id == 'user_profile_form') {
    $form['mimemail']['#access'] = FALSE;	  
	}
  
}

/**
 * Implements hook_user_view_alter().
 *
 * Hide other infos.
 */
function hc_user_user_view_alter(&$build) {
  if (isset($build['mimemail'])) {
    unset($build['mimemail']);
  }
  if (isset($build['summary'])) {
    unset($build['summary']);
  }
}

/**
 * Implements hook_preprocess_user_profile_item().
 */
function hc_user_preprocess_user_profile_item(&$variables) {
  // Append custom css classes.
  if (!empty($variables['element']['#attributes']['class'])) {
    $variables['classes_array'] = array_merge($variables['classes_array'], $variables['element']['#attributes']['class']);
  }
}

/**
 * Implements hook_preprocess_user_profile_category().
 */
function hc_user_preprocess_user_profile_category(&$variables) {
  // Append custom css classes.
  if (!empty($variables['element']['#attributes']['class'])) {
    $variables['classes_array'] = array_merge($variables['classes_array'], $variables['element']['#attributes']['class']);
  }

	if (is_array($variables['classes_array'])) {
	  $variables['classes'] = implode(' ', $variables['classes_array']);
	}
  
}

/**
 * Implements hook_theme_registry_alter().
 */
function hc_user_theme_registry_alter(&$theme_registry) {
  $theme_registry['user_profile_category']['template'] = 'user-profile-category';
  $theme_registry['user_profile_item']['template'] = 'user-profile-item';

  $theme_registry['user_profile_category']['path'] = drupal_get_path('module', 'hc_user');
  $theme_registry['user_profile_item']['path'] = drupal_get_path('module', 'hc_user');

}


/**
 * Implements hook_preprocess_page().
 */
function hc_user_preprocess_page(&$variables) {
  switch (current_path()) {
    case 'user':
    case 'user/login':
    case 'user/register':
    case 'user/password':
      $variables['title'] = '';
  }
}
